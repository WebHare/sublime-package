%YAML 1.2
---
name: HareScript
file_extensions: [ whscr, whlib, hslib, wh, tpl, shtml, whsock ]
first_line_match: <\?wh
scope: source.harescript

contexts:

  # Parse HTML by default, switch to HareScript when <?wh is found
  main:
    - match: ""
      push: "Packages/HTML/HTML.sublime-syntax"
      with_prototype:
        - match: <\?wh
          captures:
            0: punctuation.section.embedded.begin
          push: harescript

        # HareScript hashbang
        - match: ^#\!.*$
          scope: comment.line.number-sign.harescript

  # Main HareScript source
  harescript:
    - match: \?>
      captures:
        0: punctuation.section.embedded.end
      pop: true

    # Function declaration
    - match: (?i)\b(((PUBLIC|PRIVATE|UPDATE)[\s\n]+){0,2})\b((((ARRAY|BLOB|BOOLEAN|DATETIME|FIXEDPOINT|FLOAT|FUNCTION PTR|INTEGER|INTEGER64|MACRO PTR|MONEY|OBJECT|OBJECTTYPE|RECORD|REF|SCHEMA|STRING|TABLE|VARIANT)[\s\n]+)*)(FUNCTION)|(MACRO))[\s\n]+((NEW)|(\w+))(?=[\s\n]*\()
      captures:
        1:  storage.modifier.harescript
        5:  storage.type.harescript
        8:  keyword.harescript # FUNCTION
        9:  keyword.harescript # MACRO
        11:  keyword.harescript # NEW
        12: identifier.function.harescript
      scope: meta.function.harescript

    # Objecttype declaration
    - match: (?i)\b((PUBLIC|PRIVATE)[\s\n]+)\b(OBJECTTYPE)[\s\n]+(\w+)
      captures:
        2: storage.modifier.harescript
        3: storage.type.harescript
        4: identifier.objecttype.harescript
      scope: meta.objecttype.harescript

    # Objecttype property
    - match: (?i)\b(((PUBLIC|PRIVATE|UPDATE)[\s\n]+){0,2})\b(PROPERTY)[\s\n]+(\w+)(?=[\s\n]*\()
      captures:
        1: storage.modifier.harescript
        4: keyword.harescript
        5: identifier.property.harescript
      scope: meta.property.harescript

    # Loadlib
    - match: (?i)\b(LOADLIB)[\s\n]+((\"[^\"]*\")|(\'[^\']*\'))
      captures:
        1: keyword.control.import.harescript
        3: string.quoted.double.harescript
        4: string.quoted.single.harescript
      scope: meta.loadlib.harescript

    # HareScript types
    - match: (?i)\b(ARRAY|BLOB|BOOLEAN|DATETIME|FIXEDPOINT|FLOAT|FUNCTION PTR|INTEGER|INTEGER64|MACRO PTR|MONEY|OBJECT|OBJECTTYPE|RECORD|REF|SCHEMA|STRING|TABLE|VARIANT|WEAKOBJECT)\b
      scope: storage.type.harescript

    # HareScript keywords
    - match: (?i)\b(DELETE|FUNCTION|INSERT|MACRO|SELECT|ALL|AS|ASC|AT|BY|CELL|COLUMN|CLASSTYPE|CROSS|DEFAULTSTO|DESC|DISTINCT|END|EXCEPT|EXPORT|EXTEND|EXTENDSFROM|FALSE|FROM|FULL|GROUP|HAVING|INDEX|INNER|INTERSECT|INTO|JOIN|KEY|LIMIT|MEMBER|NEW|NULL|NVL|OFFSET|ONLY|ORDER|OUTER|PROPERTY|SET|TEMPORARY|TRUE|UNIQUE|USING|VALUES|VAR|VARTYPE|WHERE)\b
      scope: keyword.harescript

    # HareScript control keywords
    - match: (?i)\b(AWAIT|BREAK|CASE|CATCH|CONTINUE|ELSE|FINALLY|FOR|FOREVERY|IF|GOTO|RETURN|SWITCH|THROW|TRY|WHILE|YIELD)\b
      scope: keyword.control.harescript

    # HareScript operator keywords
    - match: (?i)\b(AND|BITAND|BITLSHIFT|BITNEG|BITOR|BITRSHIFT|BITXOR|CONCAT|IN|LIKE|NOT|OR|TYPEID|XOR)\b
      scope: keyword.operator.harescript

    # HareScript storage modifier
    - match: (?i)\b(AGGREGATE|ASYNC|DEFAULT|PRIVATE|PTR|PUBLIC|UPDATE|__ATTRIBUTES__)\b
      scope: storage.modifier.harescript

    # HareScript attributes
    - match: \b(CONSTANT|DEINITMACRO|DEPRECATED|EXECUTESHARESCRIPT|EXTERNAL|ISCOUNT|NOSTATEMODIFY|READONLY|SKIPTRACE|SPECIAL|TERMINATES|UNKNOWNISERROR|VARARG)\b
      scope: storage.modifier.attribute.harescript

    # HareScript system functions
    - match: (?i)\b(Abort|Abs|Any|AnyToString|ArraySlice|Avg|BindSchemaToTable|BindTransactionToSchema|BindTransactionToTable|ByteToString|CallFunctionPtrVA|CallMacroPtrVA|CanCastTypeTo|CellDelete|CellExists|CellInsert|CellUpdate|CollectGarbage|ConsoleLog|Count|Debugger|DebuggerKeepalive|DecodeBase16|DecodeBase32|DecodeBase32Hex|DecodeBase64|DecodeCharSet|DecodeHSON|DecodeHSONBlob|DecodeHTML|DecodeJava|DecodeJSON|DecodeJSONBlob|DecodePacket|DecodeQP|DecodeUFS|DecodeURL|DecodeValue|Detokenize|DumpValue|EncodeBase16|EncodeBase32|EncodeBase32Hex|EncodeBase64|EncodeCharSet|EncodeHSON|EncodeHSONBlob|EncodeHTML|EncodeJava|EncodeJSON|EncodeJSONBlob|EncodePacket|EncodeQP|EncodeUFS|EncodeURL|EncodeValue|ExplainFunctionPtrSignature|ExplainFunctionSignature|ExtendObject|ExtractConsoleLog|GetArrayTypeDefaultElement|GetAsyncControl|GetAuthenticationRecord|GetBestCharacterSet|GetBindingFromSchema|GetBindingFromTable|GetByteValue|GetCallingLibrary|GetCell|GetExternalSessionData|GetMember|GetMemberType|GetObjectMethodPtr|GetPermissions|GetStackTrace|GetStoredScriptProperty|GetTypeDefaultArray|GetTypeDefaultValue|GetTypeName|GetUCValue|GroupedValues|IsAtEndOfStream|IsDefaultValue|IsObjectReferencePublic|IsPrintableASCII|IsPrivilegeGranted|IsTypeidArray|IsTypeidComparable|IsValidUTF8|KeepTransactionsAlive|Left|Length|Length64|LimitUTF8Bytes|MakeAutoNumber|MakeEmptyRecord|MakeFunctionPtr|MakeMergedRecord|MakeObject|MakeObjectStrong|MakeObjectWeak|MakeOverwrittenRecord|MakePublicObjectReference|MakeReplacedRecord|MakeUpdatedRecord|Max|MemberDelete|MemberExists|MemberInsert|MemberUpdate|Min|NormalizeWhitespace|ObjectExists|Print|PrintRecordArrayTo|PrintRecordTo|PrintTo|Random|ReadFrom|ReadLineFrom|RecordExists|RedirectOutputTo|Reflect|RepeatElement|RepeatText|RestrictPermissions|Right|SearchElement|SearchLastElement|SearchLastSubstring|SearchSubstring|SeedRandomizer|SendBlobTo|SetAuthenticationRecord|SetExternalSessionData|ShuffleArray|Substitute|Substring|Sum|TerminateScript|TestPermissions|ToInteger|ToInteger64|Tokenize|ToLowercase|ToRecordArray|ToString|ToUppercase|TrimWhitespace|UCLeft|UCLength|UCRight|UCSearchLastSubstring|UCSearchSubstring|UCSubstring|UCToString|UCTruncate|UnpackRecord|ValidateFunctionPtr|WaitForMultiple|WaitForMultipleUntil|WaitForPromise|WaitUntil|WeakObjectExists|WriteTo|__CAST_TO_VARIANT_ARRAY|__HS_CONVERTTOITERATOR|__HS_EnsureTraceItemForFirstError|__HS_FATALERROR|__HS_GetPrivateMember|__HS_GETRESETTHROWVAR|__HS_INTERNAL_CancelReceiveLine|__HS_INTERNAL_MakeObjectReferencePrivileged|__HS_INTERNAL_OVERRIDEEXECUTELIBRARY|__HS_INTERNAL_ReceiveFrom|__HS_INTERNAL_RESOLVEABSOLUTELIBRARY|__HS_INTERNAL_THROWEXCEPTION|__HS_OBJECTMATCHESOUID|__HS_REBINDFUNCTIONPTR|__HS_REBINDFUNCTIONPTR2|__HS_SetPrivateMember|__HS_SQL_AddRecordArraySource|__HS_SQL_AddTableSource|__HS_SQL_CloseQuery|__HS_SQL_DEBUG_GetVarAsOptimized|__HS_SQL_DeleteRecord|__HS_SQL_GetAction|__HS_SQL_GETARRAYRESULTS|__HS_SQL_GetGroupPosition|__HS_SQL_GetRecAction|__HS_SQL_GetRecordArrayPosition|__HS_SQL_GetRecordFase1|__HS_SQL_GetRecordFase2|__HS_SQL_GetSourcesBaseList|__HS_SQL_Insert|__HS_SQL_MakeArrayOfValue|__HS_SQL_MakeDistinct|__HS_SQL_MergeRecords|__HS_SQL_OpenCursor2|__HS_SQL_OverwriteRecord|__HS_SQL_Reorder_Results|__HS_SQL_ReportWhereResult|__HS_SQL_SortArray|__HS_SQL_UpdateRecord|__HS_THROWEXCEPTION|__HS_TYPEID|__HS_WAITFORMULTIPLEUNTIL|__INTERNAL_DEBUGGETFUNCTIONPTRRETURNTYPE|__INTERNAL_SETEXCEPTIONTRACE|__MakeObjectInternal)\b(?=[\s\n]*\()
      scope: support.function.harescript

    # HareScript system objecttypes
    - match: (?i)\b(Exception|HarescriptErrorException|__HS_INTERNAL_AsyncFunctionGenerator|__HS_INTERNAL_FunctionGenerator|__HS_INTERNAL_FunctionGeneratorBase|__HS_INTERNAL_OutputObject)\b
      scope: support.class.harescript

    # HareScript system variables
    - match: (?i)\b(THIS|__system_reflecthook)\b
      scope: variable.language.harescript

    # HareScript library include
    - match: (?i)\b(LOADLIB)\b
      scope: keyword.control.import.harescript

    # Decimal (integer, money and float), hexadecimal and binary numeric constants
    - match: \b(\d*\.)?\d+(i(64)?|m|f)?\b|\b0x\h+\b|\b0b(0|1)+\b
      scope: constant.numeric.harescript

    # String constants
    - match: \"
      captures:
        0: punctuation.definition.string.begin
      push: dqstring
    - match: \'
      captures:
        0: punctuation.definition.string.begin
      push: sqstring

    # Single-line documentation comments
    - match: ///.*$
      scope: comment.line.documentation.harescript

    # Single-line comments
    - match: //.*$
      scope: comment.line.harescript

    # Documentation block comments
    - match: /\*\*
      push: docblockcomment

    # Block comments
    - match: /\*
      push: blockcomment


  # Double-quoted string constant
  dqstring:
    - meta_content_scope: string.quoted.double.harescript
    - include: escapes
    - match: \"
      captures:
        0: punctuation.definition.string.end
      pop: true

  # Single-quoted string constant
  sqstring:
    - meta_content_scope: string.quoted.single.harescript
    - include: escapes
    - match: \'
      captures:
        0: punctuation.definition.string.end
      pop: true

  # Escape characters within strings
  escapes:
    - match: \\[abfnrt\'\"\\]|\\[0-7]{3}|\\x\h{2}|\\u\h{4}
      scope: constant.character.escape.harescript

  # Documentation block comment
  docblockcomment:
    - meta_scope: comment.block.documentation.harescript
    - match: \*/
      pop: true

  # Block comment
  blockcomment:
    - meta_scope: comment.block.harescript
    - match: \*/
      pop: true
